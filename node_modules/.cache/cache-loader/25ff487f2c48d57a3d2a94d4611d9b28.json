{"remainingRequest":"/home/testingtesting123/Documents/Dev/burrrata/crypto-comix/node_modules/babel-loader/lib/index.js??ref--8-1!/home/testingtesting123/Documents/Dev/burrrata/crypto-comix/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/home/testingtesting123/Documents/Dev/burrrata/crypto-comix/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/home/testingtesting123/Documents/Dev/burrrata/crypto-comix/docs/doc2.md","dependencies":[{"path":"/home/testingtesting123/Documents/Dev/burrrata/crypto-comix/docs/doc2.md","mtime":1595295382900},{"path":"/home/testingtesting123/Documents/Dev/burrrata/crypto-comix/.docusaurus/docusaurus-plugin-content-docs/site-docs-doc-2-md-df3.json","mtime":1595301073020},{"path":"/home/testingtesting123/Documents/Dev/burrrata/crypto-comix/node_modules/cache-loader/dist/cjs.js","mtime":1595118511145},{"path":"/home/testingtesting123/Documents/Dev/burrrata/crypto-comix/node_modules/babel-loader/lib/index.js","mtime":1595118511093},{"path":"/home/testingtesting123/Documents/Dev/burrrata/crypto-comix/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1595118510977},{"path":"/home/testingtesting123/Documents/Dev/burrrata/crypto-comix/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1595118510981}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}